{
	"name": "AggregateData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesADLSSink",
						"type": "DatasetReference"
					},
					"name": "MovieADLS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MovieSQL",
						"type": "DatasetReference"
					},
					"name": "sinkToDB"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filterYearsBefore1950"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "RankMovies"
				},
				{
					"name": "aggregateRatings"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as integer,",
				"          title as string,",
				"          genres as string,",
				"          year as short,",
				"          Rating as short,",
				"          {Rotton Tomato} as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MovieADLS",
				"MovieADLS select(mapColumn(",
				"          movie,",
				"          title,",
				"          genres,",
				"          year,",
				"          Rating,",
				"          {Rotten Tomato} = {Rotton Tomato}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(toInteger(year) > 1950) ~> filterYearsBefore1950",
				"filterYearsBefore1950 derive(Primarygenres = iif(locate(\"|\", genres) > 1 , left(genres, locate(\"|\",genres) - 1), genres)) ~> derivedColumn1",
				"derivedColumn1 window(over(Primarygenres,",
				"          year),",
				"     desc({Rotten Tomato}, true),",
				"     RatingsRank = rank()) ~> RankMovies",
				"RankMovies aggregate(groupBy(Primarygenres,",
				"          year),",
				"     AvgRatings = avg(toInteger({Rotten Tomato})),",
				"          HighestRated = first(title),",
				"          LowestRated = last(title),",
				"          NumberofMovies = count()) ~> aggregateRatings",
				"aggregateRatings alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['Primarygenres','year'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinkToDB"
			]
		}
	}
}